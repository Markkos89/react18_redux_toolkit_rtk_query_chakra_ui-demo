{"ast":null,"code":"var _jsxFileName = \"C:\\\\dino\\\\react18_redux_toolkit_rtk_query_chakra_ui-demo\\\\packages\\\\app\\\\src\\\\pages\\\\Users.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { UserItem } from \"../components/UserItem\";\nimport { usersApi } from \"../services/UsersService\";\nimport { Heading, Input, Button, Spinner, Alert, AlertIcon, AlertTitle, AlertDescription, Grid, Container, Box } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Users = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const {\n    data: usersData,\n    isLoading,\n    error: usersError\n  } = usersApi.useFetchAllUsersQuery(100, {// pollingInterval: 10000, // every 10 seconds API will get new data\n  });\n  const [createUser] = usersApi.useCreateUserMutation();\n  const [deleteUser] = usersApi.useDeleteUserMutation();\n  const [updateUser] = usersApi.useUpdateUserMutation();\n\n  const handleAddNewUser = async event => {\n    event.preventDefault();\n    await createUser({\n      name\n    });\n    setName(\"\");\n  };\n\n  const handleDeleteUser = user => {\n    deleteUser(user);\n  };\n\n  const handleUpdateUser = user => {\n    updateUser(user);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxW: \"container.xl\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          m: 10,\n          children: \"Users page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddNewUser,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            m: 10,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Name\",\n              value: name,\n              onChange: event => setName(event.target.value),\n              marginRight: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n          w: \"100%\",\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            thickness: \"4px\",\n            speed: \"0.65s\",\n            emptyColor: \"gray.200\",\n            color: \"blue.500\",\n            size: \"xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), usersError && /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"Error!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: \"Failed to fetch users data.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n          gap: 6,\n          children: usersData && usersData.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n            user: user,\n            remove: handleDeleteUser,\n            update: handleUpdateUser\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Users, \"LaF/tZDWxYPMWuTgDOuUed4rDUY=\", false, function () {\n  return [usersApi.useFetchAllUsersQuery, usersApi.useCreateUserMutation, usersApi.useDeleteUserMutation, usersApi.useUpdateUserMutation];\n});\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/dino/react18_redux_toolkit_rtk_query_chakra_ui-demo/packages/app/src/pages/Users.tsx"],"names":["useState","Helmet","UserItem","usersApi","Heading","Input","Button","Spinner","Alert","AlertIcon","AlertTitle","AlertDescription","Grid","Container","Box","Users","name","setName","data","usersData","isLoading","error","usersError","useFetchAllUsersQuery","createUser","useCreateUserMutation","deleteUser","useDeleteUserMutation","updateUser","useUpdateUserMutation","handleAddNewUser","event","preventDefault","handleDeleteUser","user","handleUpdateUser","target","value","map","id"],"mappings":";;;AAAA,SAAwBA,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,SACEC,OADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,KALF,EAMEC,SANF,EAOEC,UAPF,EAQEC,gBARF,EASEC,IATF,EAUEC,SAVF,EAWEC,GAXF,QAYO,kBAZP;;;AAaA,OAAO,MAAMC,KAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM;AACJkB,IAAAA,IAAI,EAAEC,SADF;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,KAAK,EAAEC;AAHH,MAIFnB,QAAQ,CAACoB,qBAAT,CAA+B,GAA/B,EAAoC,CACtC;AADsC,GAApC,CAJJ;AAOA,QAAM,CAACC,UAAD,IAAerB,QAAQ,CAACsB,qBAAT,EAArB;AACA,QAAM,CAACC,UAAD,IAAevB,QAAQ,CAACwB,qBAAT,EAArB;AACA,QAAM,CAACC,UAAD,IAAezB,QAAQ,CAAC0B,qBAAT,EAArB;;AAEA,QAAMC,gBAAgB,GAAG,MAAOC,KAAP,IAA4B;AACnDA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMR,UAAU,CAAC;AACfR,MAAAA;AADe,KAAD,CAAhB;AAIAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GARD;;AAUA,QAAMgB,gBAAgB,GAAIC,IAAD,IAAiB;AACxCR,IAAAA,UAAU,CAACQ,IAAD,CAAV;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAID,IAAD,IAAiB;AACxCN,IAAAA,UAAU,CAACM,IAAD,CAAV;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,cAAhB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,CAAC,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,QAAQ,EAAEJ,gBAAhB;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,OAAO,EAAE,MAAd;AAAsB,YAAA,CAAC,EAAE,EAAzB;AAAA,oCACE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,MAFd;AAGE,cAAA,KAAK,EAAEd,IAHT;AAIE,cAAA,QAAQ,EAAGe,KAAD,IAAWd,OAAO,CAACc,KAAK,CAACK,MAAN,CAAaC,KAAd,CAJ9B;AAKE,cAAA,WAAW,EAAE;AALf;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,EAcGjB,SAAS,iBACR,QAAC,GAAD;AAAK,UAAA,CAAC,EAAE,MAAR;AAAgB,UAAA,SAAS,EAAE,QAA3B;AAAA,iCACE,QAAC,OAAD;AACE,YAAA,SAAS,EAAC,KADZ;AAEE,YAAA,KAAK,EAAC,OAFR;AAGE,YAAA,UAAU,EAAC,UAHb;AAIE,YAAA,KAAK,EAAC,UAJR;AAKE,YAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfJ,EAyBGE,UAAU,iBACT,QAAC,KAAD;AAAO,UAAA,MAAM,EAAC,OAAd;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ,eAgCE,QAAC,IAAD;AAAM,UAAA,eAAe,EAAC,sCAAtB;AAA6D,UAAA,GAAG,EAAE,CAAlE;AAAA,oBACGH,SAAS,IACRA,SAAS,CAACmB,GAAV,CAAeJ,IAAD,iBACZ,QAAC,QAAD;AACE,YAAA,IAAI,EAAEA,IADR;AAGE,YAAA,MAAM,EAAED,gBAHV;AAIE,YAAA,MAAM,EAAEE;AAJV,aAEOD,IAAI,CAACK,EAFZ;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAsDD,CArFM;;GAAMxB,K;UAOPZ,QAAQ,CAACoB,qB,EAGQpB,QAAQ,CAACsB,qB,EACTtB,QAAQ,CAACwB,qB,EACTxB,QAAQ,CAAC0B,qB;;;KAZnBd,K","sourcesContent":["import { FC, FormEvent, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { UserItem } from \"../components/UserItem\";\r\nimport { usersApi } from \"../services/UsersService\";\r\nimport { IUser } from \"../models/IUser\";\r\nimport {\r\n  Heading,\r\n  Input,\r\n  Button,\r\n  Spinner,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Grid,\r\n  Container,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nexport const Users: FC = () => {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const {\r\n    data: usersData,\r\n    isLoading,\r\n    error: usersError,\r\n  } = usersApi.useFetchAllUsersQuery(100, {\r\n    // pollingInterval: 10000, // every 10 seconds API will get new data\r\n  });\r\n  const [createUser] = usersApi.useCreateUserMutation();\r\n  const [deleteUser] = usersApi.useDeleteUserMutation();\r\n  const [updateUser] = usersApi.useUpdateUserMutation();\r\n\r\n  const handleAddNewUser = async (event: FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    await createUser({\r\n      name,\r\n    } as IUser);\r\n\r\n    setName(\"\");\r\n  };\r\n\r\n  const handleDeleteUser = (user: IUser) => {\r\n    deleteUser(user);\r\n  };\r\n  const handleUpdateUser = (user: IUser) => {\r\n    updateUser(user);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Users</title>\r\n      </Helmet>\r\n\r\n      <main>\r\n        <Container maxW=\"container.xl\">\r\n          <Heading m={10}>Users page</Heading>\r\n          <form onSubmit={handleAddNewUser}>\r\n            <Box display={\"flex\"} m={10}>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n                onChange={(event) => setName(event.target.value)}\r\n                marginRight={5}\r\n              />\r\n              <Button type=\"submit\">Add User</Button>\r\n            </Box>\r\n          </form>\r\n          {isLoading && (\r\n            <Box w={\"100%\"} textAlign={\"center\"}>\r\n              <Spinner\r\n                thickness=\"4px\"\r\n                speed=\"0.65s\"\r\n                emptyColor=\"gray.200\"\r\n                color=\"blue.500\"\r\n                size=\"xl\"\r\n              />\r\n            </Box>\r\n          )}\r\n          {usersError && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              <AlertTitle>Error!</AlertTitle>\r\n              <AlertDescription>Failed to fetch users data.</AlertDescription>\r\n            </Alert>\r\n          )}\r\n          <Grid templateColumns=\"repeat(auto-fit, minmax(200px, 1fr))\" gap={6}>\r\n            {usersData &&\r\n              usersData.map((user) => (\r\n                <UserItem\r\n                  user={user}\r\n                  key={user.id}\r\n                  remove={handleDeleteUser}\r\n                  update={handleUpdateUser}\r\n                />\r\n              ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}