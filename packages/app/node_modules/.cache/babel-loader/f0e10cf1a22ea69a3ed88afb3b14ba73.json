{"ast":null,"code":"var _jsxFileName = \"C:\\\\dino\\\\react18_redux_toolkit_rtk_query_chakra_ui-demo\\\\packages\\\\app\\\\src\\\\pages\\\\Posts.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { postsApi } from \"../services/PostsService\";\nimport { PostItem } from \"../components/PostItem\";\nimport { Heading, Input, Button, Spinner, Alert, AlertIcon, AlertTitle, AlertDescription, Container, Box, Table, TableCaption, TableContainer, Tbody, Th, Thead, Tr } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Posts = () => {\n  _s();\n\n  const {\n    data: postsData,\n    isLoading,\n    error\n  } = postsApi.useFetchAllPostsQuery(10);\n  const [createPost] = postsApi.useCreatePostMutation();\n  const [deletePost] = postsApi.useDeletePostMutation();\n  const [updatePost] = postsApi.useUpdatePostMutation();\n  const [title, setTitle] = useState(\"\");\n\n  const handleAddNewPost = async event => {\n    event.preventDefault();\n    if (title) await createPost({\n      title,\n      body: \"\"\n    });\n    setTitle(\"\");\n  };\n\n  const handleDeletePost = post => {\n    deletePost(post);\n  };\n\n  const handleUpdatePost = post => {\n    updatePost(post);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxW: \"container.xl\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          m: 10,\n          children: \"Posts page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"new-post-form\",\n          onSubmit: handleAddNewPost,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            m: 10,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Title\",\n              value: title,\n              onChange: event => setTitle(event.target.value),\n              marginRight: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              bg: \"teal.500\",\n              children: \"Add Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n          w: \"100%\",\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            thickness: \"4px\",\n            speed: \"0.65s\",\n            emptyColor: \"gray.200\",\n            color: \"blue.500\",\n            size: \"xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"Error!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: \"Failed to fetch posts data.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), postsData && /*#__PURE__*/_jsxDEV(TableContainer, {\n          borderRadius: 10,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            variant: \"striped\",\n            bg: \"teal.500\",\n            children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n              children: \" @ 2022 Copyright\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Thead, {\n              children: /*#__PURE__*/_jsxDEV(Tr, {\n                children: [/*#__PURE__*/_jsxDEV(Th, {\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  colSpan: 2,\n                  textAlign: \"center\",\n                  children: \"Options\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n              children: postsData.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n                post: post,\n                remove: handleDeletePost,\n                update: handleUpdatePost\n              }, post.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Posts, \"xvL7kGR8ieO75JOB50BwI5mK1qY=\", false, function () {\n  return [postsApi.useFetchAllPostsQuery, postsApi.useCreatePostMutation, postsApi.useDeletePostMutation, postsApi.useUpdatePostMutation];\n});\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/dino/react18_redux_toolkit_rtk_query_chakra_ui-demo/packages/app/src/pages/Posts.tsx"],"names":["useState","Helmet","postsApi","PostItem","Heading","Input","Button","Spinner","Alert","AlertIcon","AlertTitle","AlertDescription","Container","Box","Table","TableCaption","TableContainer","Tbody","Th","Thead","Tr","Posts","data","postsData","isLoading","error","useFetchAllPostsQuery","createPost","useCreatePostMutation","deletePost","useDeletePostMutation","updatePost","useUpdatePostMutation","title","setTitle","handleAddNewPost","event","preventDefault","body","handleDeletePost","post","handleUpdatePost","target","value","map","id"],"mappings":"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","sourcesContent":["import { FC, FormEvent, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { postsApi } from \"../services/PostsService\";\r\nimport { PostItem } from \"../components/PostItem\";\r\nimport { IPost } from \"../models/IPost\";\r\nimport {\r\n  Heading,\r\n  Input,\r\n  Button,\r\n  Spinner,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Container,\r\n  Box,\r\n  Table,\r\n  TableCaption,\r\n  TableContainer,\r\n  Tbody,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport const Posts: FC = () => {\r\n  const {\r\n    data: postsData,\r\n    isLoading,\r\n    error,\r\n  } = postsApi.useFetchAllPostsQuery(10);\r\n  const [createPost] = postsApi.useCreatePostMutation();\r\n  const [deletePost] = postsApi.useDeletePostMutation();\r\n  const [updatePost] = postsApi.useUpdatePostMutation();\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleAddNewPost = async (event: FormEvent) => {\r\n    event.preventDefault();\r\n    if (title)\r\n      await createPost({\r\n        title,\r\n        body: \"\",\r\n      } as IPost);\r\n\r\n    setTitle(\"\");\r\n  };\r\n\r\n  const handleDeletePost = (post: IPost) => {\r\n    deletePost(post);\r\n  };\r\n  const handleUpdatePost = (post: IPost) => {\r\n    updatePost(post);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Posts</title>\r\n      </Helmet>\r\n\r\n      <main>\r\n        <Container maxW=\"container.xl\">\r\n          <Heading m={10}>Posts page</Heading>\r\n\r\n          <form className={\"new-post-form\"} onSubmit={handleAddNewPost}>\r\n            <Box display={\"flex\"} m={10}>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={title}\r\n                onChange={(event) => setTitle(event.target.value)}\r\n                marginRight={5}\r\n              />\r\n              <Button type=\"submit\" bg=\"teal.500\">\r\n                Add Post\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n          {isLoading && (\r\n            <Box w={\"100%\"} textAlign={\"center\"}>\r\n              <Spinner\r\n                thickness=\"4px\"\r\n                speed=\"0.65s\"\r\n                emptyColor=\"gray.200\"\r\n                color=\"blue.500\"\r\n                size=\"xl\"\r\n              />\r\n            </Box>\r\n          )}\r\n          {error && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              <AlertTitle>Error!</AlertTitle>\r\n              <AlertDescription>Failed to fetch posts data.</AlertDescription>\r\n            </Alert>\r\n          )}\r\n          {postsData && (\r\n            <TableContainer borderRadius={10}>\r\n              <Table variant=\"striped\" bg=\"teal.500\">\r\n                <TableCaption> @ 2022 Copyright</TableCaption>\r\n                <Thead>\r\n                  <Tr>\r\n                    <Th>#</Th>\r\n                    <Th>Title</Th>\r\n                    <Th colSpan={2} textAlign=\"center\">\r\n                      Options\r\n                    </Th>\r\n                  </Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                  {postsData.map((post) => (\r\n                    <PostItem\r\n                      post={post}\r\n                      key={post.id}\r\n                      remove={handleDeletePost}\r\n                      update={handleUpdatePost}\r\n                    />\r\n                  ))}\r\n                </Tbody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </Container>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}